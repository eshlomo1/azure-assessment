{
    "1": {
        "Part" :"Storage Account",
        "num_req": "7",
        "Title": "Check for Overly Permissive Stored Access Policies\n",
        "Risk_Level":"High",
        "Descrip": "Ensure that your Microsoft Azure Storage shared access signatures don't have full access to your storage account resources (i.e. blob objects, files, tables and queues) via stored access policies. A shared access signature (SAS) is a URI that grants limited access rights to Azure Storage resources. An SAS token is useful when you have to provide secure, temporary access to your storage account resources, to clients that don't have otherwise permission to access these resources. A stored access policy provides an additional level of control over service-level shared access signatures, therefore this policy can be used to manage constraints for one or more shared access signatures. When you associate a service SAS with a stored access policy, the SAS inherits the policy constraints, such as the start time, the expiry time, and its permissions.\n",
        "Reference":"https://learn.microsoft.com/en-us/rest/api/storageservices/define-stored-access-policy",
        "Command":"az",
        "Args":"storage account list --query [*].name",
        "Second_Args": "storage container list --account-name",
        "Second_To_Second_Args":"--query [*].name",
        "Third_Args":"storage container policy list --account-name",
        "Third_To_Third_Args":"--container-name",
        "Problem": "not_equal",
        "Type": "stdout",
        "Valid": ""
    },
    "2": {
        "Part" :"Storage Account",
        "num_req": "1",
        "Title": "Configure Minimum TLS Version\n",
        "Risk_Level":"High",
        "Descrip": "Ensure that all your Microsoft Azure Storage accounts are using the latest available version of the TLS protocol in order to enhance the security of the connection between your storage accounts and their clients/applications, and comply with the industry standards.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/common/transport-layer-security-configure-minimum-version?tabs=portal",
        "Args":"YXogc3RvcmFnZSBhY2NvdW50IGxpc3QgLS1xdWVyeSAiWz9taW5pbXVtVGxzVmVyc2lvbiE9J1RMUzFfMiddLm5hbWUi",
        "Problem": "not_equal",
        "Type": "print_iter",
        "Valid": ""
    },
    "3": {
        "Part" :"Storage Account",
        "num_req": "2",
        "Title": "Disable Anonymous Access to Blob Containers\n",
        "Risk_Level":"High",
        "Descrip": "Ensure that the 'Public access level' configuration setting is set to 'Private (no anonymous access)' for all blob containers in your storage account in order to block anonymous access to these Microsoft Azure resources.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/blobs/anonymous-read-access-configure?tabs=portal",
        "Command":"az",
        "Args":"storage account list --query [*].name",
        "Second_Args": "storage container list --account-name",
        "Second_To_Second_Args":"--query [?properties.publicAccess=='container'].name",
        "Problem": "not_equal",
        "Type": "print_iter",
        "Valid": ""
    },
    "4": {
        "Part" :"Storage Account",
        "num_req": "2",
        "Title": "Review Storage Accounts with Static Website Configuration\n",
        "Risk_Level":"Low",
        "Descrip": "Ensure that all the Microsoft Azure Storage accounts configured to host static websites are regularly reviewed for security and compliance purposes. Upon enabling this rule on your Cloud Conformity console, you must specify the storage account or the list of storage accounts that are expected to host static content (HTML, CSS, JavaScript and image files).\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-static-website",
        "Command":"az",
        "Args":"storage account list --query [*].name",
        "Second_Args": "storage blob service-properties show --account-name",
        "Second_To_Second_Args":"--query staticWebsite.enabled",
        "Problem": "equal",
        "Type": "stdout",
        "Valid": "true"
    },
    "5": {
        "Part" :"Storage Account",
        "num_req": "2",
        "Title": "Disable Public Access To Storage Accounts With Blob Containers\n",
        "Risk_Level":"Medium",
        "Descrip": "Ensure that public (anonymous) access is disabled for all the blob containers available within your Microsoft Azure storage accounts in order to protect your data against unauthorized access. Disabling public access at the storage account level overrides the public access setting configured for the individual blob containers in that storage account.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/blobs/anonymous-read-access-prevent?tabs=portal",
        "Command":"az",
        "Args":"storage account list --query [*].id",
        "Second_Args": "storage account show --ids",
        "Second_To_Second_Args":"--query allowBlobPublicAccess",
        "Problem": "equal",
        "Type": "stdout",
        "Valid": "true"
    },
    "6": {
        "Part" :"Storage Account",
        "num_req": "5",
        "Title": "Enable Blob Storage Lifecycle Management\n",
        "Risk_Level":"Medium",
        "Descrip": "Ensure there is a lifecycle management policy configured for your Microsoft Azure Blob Storage data in order to meet compliance requirements when it comes to security and cost optimization. Azure Storage lifecycle management offers a rich, rule-based policy for general purpose and blob storage accounts. Use the lifecycle management policy to transition your Azure cloud data to the appropriate access tiers or expire it at the end of the data's lifecycle.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/blobs/lifecycle-management-policy-configure?tabs=azure-portal",
        "Command":"az",
        "Len":"--query [].id",
        "Args":"storage account list --output json",
        "Second_Args": "storage account management-policy show --account-name",
        "Second_To_Second_Args":"--query policy.rules[?(enabled=='true')].name --resource-group",
        "Problem": "equal",
        "Type": "stdout",
        "Valid": ""
    },
    "7": {
        "Part" :"Storage Account",
        "num_req": "2",
        "Title": "Enable Logging for Azure Storage Blob Service\n",
        "Risk_Level":"Medium",
        "Descrip": "Ensure that Azure Storage Blob service logging is enabled for read, write, and delete requests. The Storage Blob service provides scalable, cost-efficient objective storage in the Azure cloud. Storage logging is performed server-side and allows details for both successful and failed requests to be recorded in the associated storage account. These logs contain the following information about the individual requests: timing information such as start time, end-to-end latency, server latency, authentication details, concurrency information, and the size of the request/response.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/common/manage-storage-analytics-logs?tabs=azure-portal",
        "Command":"az",
        "Args":"storage account list --query [*].name",
        "Second_Args": "storage logging show --account-name",
        "Second_To_Second_Args":"--query blob.write",
        "Problem": "equal",
        "Type": "stdout",
        "Valid": "true"
    },
    "8": {
        "Part" :"Storage Account",
        "num_req": "2",
        "Title": "Enable Logging for Azure Storage Queue Service\n",
        "Risk_Level":"High",
        "Descrip": "Ensure that Microsoft Azure Storage Queue service logging is enabled for read, write and delete requests. The Storage Queue cloud service stores messages that can be read by any user that has access to your storage account. A queue can contain an unlimited number of messages, each of which can be up to 64KB in size. The Azure Storage Queue service logging records details for both successful and failed requests made to the queues, as well as end-to-end latency, server latency, and authentication information.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/queues/monitor-queue-storage?tabs=azure-portal",
        "Command":"az",
        "Args":"storage account list --query [*].name",
        "Second_Args": "storage logging show --account-name",
        "Second_To_Second_Args":"--query queue.write",
        "Problem": "not_equal",
        "Type": "stdout",
        "Valid": "true"
    },
    "9": {
        "Part" :"Storage Account",
        "num_req": "2",
        "Title": "Enable Logging for Azure Storage Table Service\n",
        "Risk_Level":"Medium",
        "Descrip": "Ensure that Azure Storage Table service logging is enabled for read, write, and delete requests. The Azure Storage Table service stores structured NoSQL data in the cloud, providing a key/attribute store with a schema-less design. Storage logging is performed server-side and allows details for both successful and failed requests to be recorded in the associated storage account. These logs allow you to see the details of read, write, and delete operations against the tables. The storage logging contains the following information about individual requests: time-based information such as start time, end-to-end latency, server latency, authentication details, concurrency information, and the sizes of the request and response messages.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/tables/monitor-table-storage?tabs=azure-portal",
        "Command":"az",
        "Args":"storage account list --query [*].name",
        "Second_Args": "storage logging show --account-name",
        "Second_To_Second_Args":"--query table.write",
        "Problem": "not_equal",
        "Type": "stdout",
        "Valid": "true"
    },
    "10": {
        "Part" :"Storage Account",
        "num_req": "2",
        "Title": "Enable Secure Transfer in Azure Storage\n",
        "Risk_Level":"Medium",
        "Descrip": "Ensure that all data transferred between clients and your Azure Storage account is encrypted using the HTTPS protocol. A Microsoft Azure Storage account contains data objects such as files, blobs, queues, tables, and disks. The storage account provides a unique namespace for your Azure Storage data that is accessible from anywhere in the world over HTTP/HTTPS. All data stored within your Azure Storage account is secure, scalable, durable, and highly available.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/common/storage-require-secure-transfer",
        "Command":"az",
        "Args":"storage account list --query [*].name",
        "Second_Args": "storage account show --name",
        "Second_To_Second_Args":"--query enableHttpsTrafficOnly",
        "Problem": "not_equal",
        "Type": "stdout",
        "Valid": "true"
    },
    "11": {
        "Part" :"Storage Account",
        "num_req": "2",
        "Title": "Enable Soft Delete for Azure Blob Storage\n",
        "Risk_Level":"Medium",
        "Descrip": "Ensure that Soft Delete feature is enabled for all your Microsoft Azure Storage blob objects (blobs and snapshots). Soft Delete enables you to save and recover blob data in case your Azure Storage blobs or blob snapshots are deleted. This extra layer of protection also extends to the Microsoft Azure blob data that is erased as the result of an overwrite operation. With Soft Delete feature enabled, when blob objects are deleted, they are transitioned to a soft deleted state instead of being permanently erased. When blob objects are overwritten, soft deleted snapshots are created to save the state of the overwritten blob data.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/blobs/soft-delete-blob-enable?tabs=azure-portal",
        "Command":"az",
        "Args":"storage account list --query [*].name",
        "Second_Args": "storage blob service-properties delete-policy show --account-name",
        "Second_To_Second_Args":"--query enabled",
        "Problem": "not_equal",
        "Type": "stdout",
        "Valid": "true"
    },
    "12": {
        "Part" :"Storage Account",
        "num_req": "1",
        "Title": "Enable Trusted Microsoft Services for Storage Account Access\n",
        "Risk_Level":"Medium",
        "Descrip": "Ensure that 'Allow trusted Microsoft services to access this storage account' exception is enabled within your Azure Storage account configuration settings to grant access to trusted cloud services.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/common/storage-network-security?tabs=azure-portal",
        "Args":"YXogc3RvcmFnZSBhY2NvdW50IGxpc3QgLS1xdWVyeSAiWz9uZXR3b3JrUnVsZVNldC5ieXBhc3M9PSdOb25lJ10ubmFtZSI=",
        "Problem": "not_equal",
        "Type": "print_iter",
        "Valid": ""
    },
    "13": {
        "Part" :"Storage Account",
        "num_req": "1",
        "Title": "Restrict Default Network Access for Storage Accounts\n",
        "Risk_Level":"Medium",
        "Descrip": "Ensure that your Microsoft Azure Storage account is configured to deny access to traffic from all networks (including Internet traffic). By restricting access to your storage account default network, you add a new layer of security, since the default action is to accept connections from clients on any network. To limit access to selected networks or IP addresses, you must first change the default action from 'Allow' to 'Deny'.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/common/storage-network-security?tabs=azure-portal",
        "Args":"YXogc3RvcmFnZSBhY2NvdW50IGxpc3QgLS1xdWVyeSAiWz9uZXR3b3JrUnVsZVNldC5kZWZhdWx0QWN0aW9uPT0nQWxsb3cnXS5uYW1lIgo=",
        "Problem": "not_equal",
        "Type": "print_iter",
        "Valid": ""
    },
    "14": {
        "Part" :"Storage Account",
        "num_req": "2",
        "Title": "Storage Account Encryption using Customer Managed Keys\n",
        "Risk_Level":"High",
        "Descrip": "Ensure that your Microsoft Azure Storage accounts are using Customer Managed Keys (CMKs) instead of Microsoft Managed Keys (i.e. default keys used by Microsoft Azure for data encryption), in order to have a more granular control over your Azure Storage data encryption and decryption process.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/common/customer-managed-keys-overview",
        "Command":"az",
        "Args":"storage account list --query [*].name",
        "Second_Args": "storage account show --name",
        "Second_To_Second_Args":"--query encryption.keyVaultProperties.keyName",
        "Problem": "equal",
        "Type": "stdout",
        "Valid": ""
    },
    "15": {
        "Part" :"Storage Account",
        "num_req": "2",
        "Title": "Use BYOK for Storage Account Encryption\n",
        "Risk_Level":"High",
        "Descrip": "Ensure that your Azure Storage accounts are using customer-managed keys (also known as Bring Your Own Keys - BYOKs) instead of service-managed keys (default keys used by Microsoft Azure for data encryption), in order to have a more granular control over your Azure Storage data encryption and decryption process.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/common/customer-managed-keys-overview",
        "Command":"az",
        "Args":"storage account list --query [*].name",
        "Second_Args": "storage account show --name",
        "Second_To_Second_Args":"--query encryption.keyVaultProperties.keyName",
        "Problem": "equal",
        "Type": "stdout",
        "Valid": ""
    },
    "16": {
        "Part" :"Storage Account",
        "num_req": "1",
        "Title": "Use OAuth for Storage Account Authentication\n",
        "Risk_Level":"High",
        "Descrip": "Ensure that your Azure Storage accounts are using customer-managed keys (also known as Bring Your Own Keys - BYOKs) instead of service-managed keys (default keys used by Microsoft Azure for data encryption), in order to have a more granular control over your Azure Storage data encryption and decryption process.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/blobs/authorize-access-azure-active-directory",
        "Args":"YXogc3RvcmFnZSBhY2NvdW50IGxpc3QgLS1xdWVyeSAiWz9kZWZhdWx0VG9PQXV0aEF1dGhlbnRpY2F0aW9uIT0ndHJ1ZSddLm5hbWUi",
        "Problem": "not_equal",
        "Type": "print_iter",
        "Valid": ""
    },
    "17": {
        "Part" :"Storage Account",
        "num_req": "1",
        "Title": "Check Public Network Access for Storage Account\n",
        "Risk_Level":"High",
        "Descrip": "Ensure that your Azure Storage accounts are using customer-managed keys (also known as Bring Your Own Keys - BYOKs) instead of service-managed keys (default keys used by Microsoft Azure for data encryption), in order to have a more granular control over your Azure Storage data encryption and decryption process.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/common/storage-network-security?tabs=azure-portal",
        "Args":"YXogc3RvcmFnZSBhY2NvdW50IGxpc3QgLS1xdWVyeSAiWz9wdWJsaWNOZXR3b3JrQWNjZXNzPT0nRW5hYmxlZCddLm5hbWUi",
        "Problem": "not_equal",
        "Type": "print_iter",
        "Valid": ""
    },
    "18": {
        "Part" :"Storage Account",
        "num_req": "1",
        "Title": "Check Infrastructure Encryption for Storage Account\n",
        "Risk_Level":"High",
        "Descrip": "Ensure that your Azure Storage accounts are using customer-managed keys (also known as Bring Your Own Keys - BYOKs) instead of service-managed keys (default keys used by Microsoft Azure for data encryption), in order to have a more granular control over your Azure Storage data encryption and decryption process.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/common/infrastructure-encryption-enable?tabs=portal",
        "Args": "YXogc3RvcmFnZSBhY2NvdW50IGxpc3QgLS1xdWVyeSAiWz9lbmNyeXB0aW9uLnJlcXVpcmVJbmZyYXN0cnVjdHVyZUVuY3J5cHRpb24hPSd0cnVlJ10ubmFtZSI=",
        "Problem": "not_equal",
        "Type": "print_iter",
        "Valid":""
    },
    "19": {
        "Part" :"Storage Account",
        "num_req": "7",
        "Title": "Check for Immutable Storage With Versioning Enabled\n",
        "Risk_Level":"High",
        "Descrip": "Ensure that your Microsoft Azure Storage shared access signatures don't have full access to your storage account resources (i.e. blob objects, files, tables and queues) via stored access policies. A shared access signature (SAS) is a URI that grants limited access rights to Azure Storage resources. An SAS token is useful when you have to provide secure, temporary access to your storage account resources, to clients that don't have otherwise permission to access these resources. A stored access policy provides an additional level of control over service-level shared access signatures, therefore this policy can be used to manage constraints for one or more shared access signatures. When you associate a service SAS with a stored access policy, the SAS inherits the policy constraints, such as the start time, the expiry time, and its permissions.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/blobs/immutable-policy-configure-version-scope?tabs=azure-portal",
        "Command":"az",
        "Args":"storage account list --query [*].name",
        "Second_Args": "storage container list --account-name",
        "Second_To_Second_Args":"--query [*].name",
        "Third_Args":"storage container show --account-name",
        "Third_To_Third_Args":"--query immutableStorageWithVersioningEnabled --name",
        "Problem": "not_equal",
        "Type": "stdout",
        "Valid": "true"
    },
    "20": {
        "Part" :"Storage Account",
        "num_req": "2",
        "Title": "Regenerate Storage Account Access Keys Periodically\n",
        "Risk_Level":"Medium",
        "Descrip": "Ensure that Azure Storage account access keys are regenerated every 90 days in order to decrease the likelihood of accidental exposures and protect your storage account resources against unauthorized access.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal",
        "Command":"az",
        "Args":"storage account list --query [*].resourceGroup",
        "Second_Args": "monitor activity-log list --resource-group",
        "Second_To_Second_Args":"--status Succeeded --offset 90d --query [?authorization.action=='Microsoft.Storage/storageAccounts/regenerateKey/action']",
        "Problem": "not_equal",
        "Type": "stdout",
        "Valid": ""
    },
    "21": {
        "Part" :"Storage Account",
        "num_req": "2",
        "Title": "Check for Publicly Accessible Web Containers\n",
        "Risk_Level":"High",
        "Descrip": "Ensure that the Microsoft Azure Storage web containers configured to host static websites within Azure cloud are not publicly accessible in order to eliminate the direct exposure to the public Internet.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/blobs/anonymous-read-access-configure?tabs=portal",
        "Command":"az",
        "Args":"storage account list --query [*].name",
        "Second_Args": "storage container list --account-name",
        "Second_To_Second_Args":"--query [?properties.publicAccess!=''].name",
        "Problem": "not_equal",
        "Type": "print_iter",
        "Valid": ""
    },
    "22": {
        "Part" :"Storage Account",
        "num_req": "7",
        "Title": "Enable Immutable Blob Storage\n",
        "Risk_Level":"High",
        "Descrip":"Ensure that Immutable Blob Storage feature is enabled for Microsoft Azure Storage blob containers that hold sensitive and business-critical information. Immutable Blob Storage enables you to store critical, production data objects in a WORM (Write Once, Read Many) state. This state makes the data non-erasable and non-modifiable for a user-specified time interval. Azure blob objects can be created and read, but not modified or deleted, for the duration of the retention interval configured. The feature supports two types of policies that you can apply to a container for retaining the data within the specified container in a non-modifiable and delete-protected state: \n 1. A time-based immutability policy – this policy can be used for regulatory compliance to lock data from future edits. Once the policy is locked, it cannot be unlocked.    \n  2. A legal hold policy – this allows you to set an indefinite hold on all the blob objects within a container. When a legal hold is set, the data inside the container moves to a delete-protected and modify-protected state.\n",
        "Reference":"https://learn.microsoft.com/en-us/azure/storage/blobs/immutable-policy-configure-version-scope?tabs=azure-portal",
        "Command":"az",
        "Args":"storage account list --query [*].name",
        "Second_Args": "storage container list --account-name",
        "Second_To_Second_Args":"--query [*].name",
        "Third_Args":"storage container show --account-name",
        "Third_To_Third_Args":"--query properties --name ",
        "Problem": "two_equal",
        "Type": "auto_catch",
        "first":"hasImmutabilityPolicy",
        "second":"hasLegalHold",
        "Valid": "false",
        "Valid2":"false"
    }

}